name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  setup-and-test:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.cache-key }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Cache node modules
      id: cache-key
      uses: actions/cache@v4
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install dependencies
      run: yarn install

    - name: Set environment variables from secrets
      env:
        TEST_AUTH_USER: ${{ secrets.TEST_AUTH_USER }}
        TEST_AUTH_PASSWORD: ${{ secrets.TEST_AUTH_PASSWORD }}
      run: echo "Environment variables set"

    - name: Run tests
      run: yarn test

  build:
    runs-on: ubuntu-latest
    needs: [setup-and-test]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Use cached dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - name: Build project
      run: yarn build

  docker:
    runs-on: ubuntu-latest
    needs: [setup-and-test, build]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Build Docker image
      run: docker build -t my-docker-image:${{ github.sha }} .

    - name: Push Docker image
      run: docker push my-docker-image:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: "my-azure-webapp"
        slot-name: "production"
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
